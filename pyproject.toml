[tool.poetry]
name = "tosca-intent-discovery"
version = "0.1.0"
description = "Infrastructure Intent Discovery via TOSCA-based Reverse Engineering"
authors = ["xDaryamo <mr.dario.mazza@gmail.com>"]
readme = "README.md"
packages = [
  {include = "core", from = "src"},
  {include = "plugins", from = "src"},
  {include = "models", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.11.7"
python-hcl2 = "^7.2.1"
ruamel-yaml = "^0.18.14"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"
black = "^24.0.0"
ruff = "^0.1.6"
mypy = "^1.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E", "W",  # pycodestyle
    "F",       # pyflakes
    "I",       # isort
    "B",       # flake8-bugbear
    "C4",      # flake8-comprehensions
    "UP",      # pyupgrade
]

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
no_implicit_optional = true
warn_return_any = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
pretty = true
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=90"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "enums: Tests for enumeration types",
    "protocols: Tests for protocol implementations"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]
