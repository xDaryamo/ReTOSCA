name: CI

on:
  push:
    branches: [ master, models]
  pull_request:

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-py311

      - name: Install deps
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Ruff (lint)
        run: poetry run ruff check .

      - name: Black (format check)
        run: poetry run black --check .

      # (opzionale) Mypy:
      # - name: Mypy (type-check)
      #   run: poetry run mypy src

  test:
    name: Tests (coverage)
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-py${{ matrix.python-version }}

      - name: Install deps
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Pytest (coverage)
        run: |
          poetry run pytest \
            --cov=src --cov-branch \
            --cov-report=term-missing \
            --cov-report=xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
